spring:
  profiles:
    active: ${APP_PROFILE:dev}
  devtools:
    add-properties: false
  main:
    banner-mode: "CONSOLE"   # por algum motivo tem que ser entre aspas duplas
    allow-bean-definition-overriding: true  
  application:
    name: product-service
  data:
    mongodb:
      uri: mongodb://root:MongoDB2025!@localhost:27017/customer-service?authSource=admin
      database: product-service
      auto-index-creation: true
      uuid-representation: standard

  kafka:
    bootstrap-servers: ${SPRING_KAFKA_BOOTSTRAP_SERVERS:localhost:29092}
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      properties:
        spring.json.trusted.packages: "br.matosit.product_service.application.dto"

server:
  port: 8051

logging:
  level:
    org.apache.kafka: ERROR
    org.springframework.kafka: ERROR
    br.matosit.product_service: INFO
    org.apache.kafka.clients.producer.ProducerConfig: ERROR
    org.apache.kafka.clients.consumer.ConsumerConfig: ERROR
    org.apache.kafka.common.metrics: ERROR
    org.apache.kafka.clients.Metadata: ERROR
    org.springframework.data.mongodb: INFO
    br.matosit.customer_service: INFO
  pattern: 
    console: "[%d{yyyy-MM-dd HH:mm:ss}] [X-ReqID=%X{X-ReqId}] [%-5level] [%logger{70}] - %msg%n"

cors:
  origins: ${CORS_ORIGINS:http://localhost:5173,http://localhost:3000}

springdoc:
  api-docs:
    path: "/api-docs"

management:
  security:
    enabled: false
  endpoints:
    web:
      exposure:
        include: health,info
  endpoint:
    health:
      show-details: always 

app:
  kafka:
    topic:
      product:
        name: product-created
            
  async:
    core-pool-size: 2
    max-pool-size: 4
    queue-capacity: 50
    thread-name-prefix: "AsyncEvent-"
